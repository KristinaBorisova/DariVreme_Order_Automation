name: Daily Delivery Automation

on:
  # Run every weekday at 9:00 AM UTC (adjust timezone as needed)
  schedule:
    - cron: '0 9 * * 1-5'  # Monday-Friday at 9:00 AM UTC
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode (dry run)'
        required: false
        default: false
        type: boolean

jobs:
  daily-delivery:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up environment variables
      run: |
        echo "TOKEN_URL=https://stageapi.glovoapp.com/oauth/token" >> $GITHUB_ENV
        echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
        echo "API_SECRET=${{ secrets.API_SECRET }}" >> $GITHUB_ENV
        echo "GOOGLE_SHEETS_URL=${{ secrets.GOOGLE_SHEETS_URL }}" >> $GITHUB_ENV
        echo "Environment variables set successfully"
        echo "TOKEN_URL: https://stageapi.glovoapp.com/oauth/token"
        echo "API_KEY is set: ${{ secrets.API_KEY != '' }}"
        echo "API_SECRET is set: ${{ secrets.API_SECRET != '' }}"
        echo "GOOGLE_SHEETS_URL is set: ${{ secrets.GOOGLE_SHEETS_URL != '' }}"
        
    - name: Verify secrets are set
      run: |
        if [ -z "${{ secrets.API_KEY }}" ]; then
          echo "‚ùå API_KEY secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.API_SECRET }}" ]; then
          echo "‚ùå API_SECRET secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.GOOGLE_SHEETS_URL }}" ]; then
          echo "‚ùå GOOGLE_SHEETS_URL secret is not set"
          exit 1
        fi
        echo "‚úÖ All required secrets are set"
        
    - name: Test environment variables
      run: |
        python test_env_vars.py
        
    - name: Test authentication
      run: |
        cd step_1_authentication
        python token_service.py
        
    - name: Run daily delivery automation
      run: |
        if [ "${{ github.event.inputs.test_mode }}" = "true" ]; then
          echo "üß™ Running in test mode (dry run)"
          python test_weekday_automation.py
        else
          echo "üöÄ Running daily delivery automation"
          python daily_delivery_automation.py
        fi
        
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: daily-delivery-logs-${{ github.run_number }}
        path: |
          logs/
          daily_results/
          
    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: daily-delivery-results-${{ github.run_number }}
        path: |
          quote_results_final.json
          test_order_results.json
          daily_results/
          
    - name: Log failure
      if: failure()
      run: |
        echo "‚ùå Daily delivery automation failed. Check the logs for details."
        echo "Workflow run URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
